name: Ping Supabase to Prevent Pausing
env:
  SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
  SUPABASE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
  run: |
    echo "SUPABASE_URL length: ${#SUPABASE_URL}"
    echo "SUPABASE_KEY length: ${#SUPABASE_KEY}"
    if [ -z "$SUPABASE_URL" ]; then echo "SUPABASE_URL is empty!"; fi
    if [ -z "$SUPABASE_KEY" ]; then echo "SUPABASE_KEY is empty!"; fi
on:
  schedule:
    - cron: '0 9 * * 1,4' # Runs at 9:00 AM UTC every Monday and Thursday
  workflow_dispatch: # Allows manual triggering from the GitHub UI

jobs:
  ping:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Deno
      - name: Set up Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      # Step 3: Write Deno script
      - name: Write Deno script
        run: |
          cat <<'EOF' > ping_supabase.js
          const SUPABASE_URL = Deno.env.get("SUPABASE_URL");
          const SUPABASE_KEY = Deno.env.get("SUPABASE_KEY");

          console.log("Supabase URL:", SUPABASE_URL);
          console.log("Supabase Key:", SUPABASE_KEY);

          import { createClient } from "https://esm.sh/@supabase/supabase-js@2";

          const supabase = createClient(SUPABASE_URL, SUPABASE_KEY);

          const { data, error } = await supabase.from("documents").select("*").limit(10);

          if (error) {
            console.error("Error pinging Supabase:", error.message);
            Deno.exit(1);
          }

          console.log("Ping successful:", data);
          EOF

      # Step 4: Run Deno script
      - name: Ping Supabase with Deno
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        run: deno run --allow-net --allow-env ping_supabase.js
